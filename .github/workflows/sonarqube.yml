name: SonarQube Analysis

on:
#  push:
#    branches: [ "dev" ]
#    paths:
#      - 'src/*'
#      - 'include/*'
#      - 'test/*'
  # Se activa este workflow automáticamente cada vez que se hace un Pull Request hacia la rama "dev", que contenga cambios en src include o test
  pull_request:
    branches: [ "dev" ]
    paths:
      - 'src/*'
      - 'include/*'
      - 'test/*'

  # Esta línea permite accionar el workflow manualmente desde GitHub Actions, muy útil para testear correrlo incluso en otras ramas
  workflow_dispatch:

env:
  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
  SONAR_VERSION: "4.8.0.2856"


jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
#      - uses: sonarsource/sonarqube-scan-action@master
      # If you wish to fail your job when the Quality Gate is red, uncomment the
      # following lines. This would typically be used to fail a deployment.
      # - uses: sonarsource/sonarqube-quality-gate-action@master
      #   timeout-minutes: 5
      #   env:
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      - uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      - name: Install PlatformIO Core
        run: pip install --upgrade platformio
      - name: "Download SonarQube Requirements"
        run: |
          pwd
          mkdir -p sonarqube
          cd sonarqube
          wget --no-verbose https://sonarcloud.io/static/cpp/build-wrapper-linux-x86.zip
          unzip -qq build-wrapper-linux-x86.zip
          rm build-wrapper-linux-x86.zip
          wget --no-verbose https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-${{ env.SONAR_VERSION }}-linux.zip
          unzip -qq sonar-scanner-cli-${{ env.SONAR_VERSION }}-linux.zip
          rm sonar-scanner-cli-${{ env.SONAR_VERSION }}-linux.zip
          mkdir -p output
          cd ..
          ./sonarqube/build-wrapper-linux-x86/build-wrapper-linux-x86-64 --out-dir ./sonarqube/output/ platformio run
          ./sonarqube/sonar-scanner-${{ env.SONAR_VERSION }}-linux/bin/sonar-scanner -Dsonar.login=${{ env.SONAR_TOKEN }} -Dsonar.host.url=${{ env.SONAR_HOST_URL }}